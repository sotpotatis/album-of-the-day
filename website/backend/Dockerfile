#Backend Dockerfile
#Runs the backend (the website) which includes the API etc.
FROM ghcr.io/oracle/oraclelinux8-instantclient:21
# Set all the environment variables from arguments (see docker-compose.yml)
ARG DJANGO_SECRET_KEY
ARG DATABASE_USER
ARG DATABASE_PASSWORD
ARG DATABASE_NAME
ARG DATABASE_HOST
ARG DATABASE_PORT
ARG DATABASE_ENGINE
ARG LAST_FM_API_KEY
ARG LAST_FM_USER_AGENT
ARG LAST_FM_USERNAME
ARG SPOTIFY_CLIENT_ID
ARG SPOTIFY_CLIENT_SECRET
ARG SPOTIFY_USER_AGENT
ARG FRONTEND_BASE_URL
ARG BASE_URL
ARG BASE_DOMAIN
ARG ALBUM_OF_THE_DAY_BOT_TOKEN
ARG ALBUM_IMAGES_FONT_PATH
ARG DJANGO_CSRF_ORIGINS
ARG ORACLE_WALLET_FILE_CONTENTS
ARG ORACLE_SQLNET_FILE_CONTENTS
ARG ORACLE_TNSNAMES_FILE_CONTENTS
ARG TASK_RUNNER_CONFIG_FILE_CONTENTS
ARG TEST
ARG LOGGING_LEVEL=$LOGGING_LEVEL
# ENV DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY
# ENV DATABASE_USER=$DATABASE_USER
# ENV DATABASE_PASSWORD=$DATABASE_PASSWORD
# ENV DATABASE_NAME=$DATABASE_NAME
# ENV DATABASE_HOST=$DATABASE_HOST
# ENV DATABASE_PORT=$DATABASE_PORT
# ENV DATABASE_ENGINE=$DATABASE_ENGINE
# ENV LAST_FM_API_KEY=$LAST_FM_API_KEY
# ENV LAST_FM_USER_AGENT=$LAST_FM_USER_AGENT
# ENV LAST_FM_USERNAME=$LAST_FM_USERNAME
# ENV SPOTIFY_CLIENT_ID=$SPOTIFY_CLIENT_ID
# ENV SPOTIFY_CLIENT_SECRET=$SPOTIFY_CLIENT_SECRET
# ENV SPOTIFY_USER_AGENT=$SPOTIFY_USER_AGENT
# ENV FRONTEND_BASE_URL=$FRONTEND_BASE_URL
# ENV BASE_URL=$BASE_URL
# ENV BASE_DOMAIN=$BASE_DOMAIN
# ENV ALBUM_OF_THE_DAY_BOT_TOKEN=$ALBUM_OF_THE_DAY_BOT_TOKEN
# ENV ALBUM_IMAGES_FONT_PATH=$ALBUM_IMAGES_FONT_PATH
# ENV DJANGO_CSRF_ORIGINS=$DJANGO_CSRF_ORIGINS
# ENV ORACLE_WALLET_FILE_CONTENTS=$ORACLE_WALLET_FILE_CONTENTS
# ENV ORACLE_SQLNET_FILE_CONTENTS=$ORACLE_SQLNET_FILE_CONTENTS
# ENV ORACLE_TNSNAMES_FILE_CONTENTS=$ORACLE_TNSNAMES_FILE_CONTENTS
# ENV TASK_RUNNER_CONFIG_FILE_CONTENTS=$TASK_RUNNER_CONFIG_FILE_CONTENTS
# ENV LOGGING_LEVEL=$LOGGING_LEVEL
# ENV TEST=$TEST
WORKDIR /app
COPY ./album_of_the_day_backend .
RUN cat ./backend.env || exit 1 # Validate environment variable file
# Install dependencies
# (coreutils is for Base64), python3-devel and postgresql is for psycopg2
RUN yum install python39 curl wget unzip coreutils postgresql python3-devel -y
WORKDIR album_of_the_day_backend
# Download Archivo Black - not needed anymore as it is handled by the code
# RUN wget https://www.1001fonts.com/download/archivo-black.zip
# RUN unzip archivo-black.zip
# Set environment variable to where the font was downloaded
# ENV ALBUM_IMAGES_FONT_PATH=$(pwd)/archivo-black/ArchivoBlack-Regular.zip
WORKDIR /app
# Install Poetry and dependencies
RUN curl -sSL https://install.python-poetry.org | python3.9 -
# Add Poetry to path
ENV PATH="/root/.local/bin:$PATH"
# Install dependencies using Poetry
RUN poetry install
# Work with the environment variables
RUN chmod +x prepare-environment-and-expand-files.sh && ./prepare-environment-and-expand-files.sh # Run script generated by script above
WORKDIR album_of_the_day_backend
# And now just run the server
EXPOSE 8080
ENTRYPOINT ["poetry", "run", "uvicorn", "album_of_the_day.asgi:application", "--host=0.0.0.0", "--port=8080"]
